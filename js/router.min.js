var router=function(){const a=this;this.notfound=!0,this.routes=[],this.paramsEnabled=!1,this.routeCall=function(){},this.params=[],this.BeforeRouteMiddleware="*",this.BeforeRouteMiddlewareFunc=null,this.AfterRouteCallback=null,this.route={};let b=function(){throw new TypeError("Router.js : 404 error.")};this.setErrorCallback=function(a){b=a},this.notFoundException=function(){b.apply(null,[])},this.getCurrentURI=function(){return new RouterRequest().getURI()},this.before=function(b,c){a.BeforeRouteMiddleware=b,a.BeforeRouteMiddlewareFunc=c},this.add=function(b,c,d){("string"!=typeof b||"string"!=typeof c||"function"!=typeof d)&&new Exception("Error while adding a route. Parameters \"name\" and \"route\" must be type of string. Callback must be a valid function.");const e=c.split("/");let f=!1,g=[];switch(e.forEach(function(b){":"===b.substr(0,1)&&(f=a.paramsEnabled=!0,g.push(b.substr(1,b.length)))}),c.substr(0,2)){case"#/":c=c.substr(1);break;case"/#":c=c.substr(2);}a.routes.push({name:b,route:c,callback:d,paramsEnabled:f,params:g})},this.map=function(b,c,d=[]){"string"==typeof b&&"string"==typeof c&&Array.isArray(d)||new Exception("Error while adding a route. Parameters \"name\" and \"mount\" must be type of string. Routes must be an Array."),d.forEach(function(d){a.add(b+d.name,c+a.FormatPath(d.route,!0),d.callback)})},this.fetchRoute=function(b,c){const d=a.routes.find(function(a){return a.name===b||a.route===b});if("object"!=typeof d)return void new Exception("Target route \""+b+"\" does not exist");if(!d.paramsEnabled)return void new RouterRequest().setURI(d.route);c||new Exception("Error: route \""+b+"\" requires some parameters. None specified.");let e=this.GenerateURL(d.route,c);new RouterRequest().setURI(e)},this.GenerateURL=function(a,b){let c=a;for(let d in b){if(!b.hasOwnProperty(d))continue;const e=a.split("/").find(function(a){return a===":"+d});c=c.replace(e,b[d])}return c},this.FormatPath=function(a,b=!1){return b&&"/"===a?a="":!b&&"/"===a.substr(0,1)&&(a=a.substr(1)),a};const c=function(b,c=[]){a.route=b,a.routeCall=b.callback,a.params=c,a.notfound=!1};this.handle=function(b){const d=a.getCurrentURI();b.forEach(function(b){const e=b.split("/");let f=d.split("/");if(f.length!==e.length)return;const g=new handlingParams(b);f=f.join("");g.RouteArray!==f||a.routes.forEach(function(d){d.route===b&&a.notfound&&c(d,g.params)})})},this.run=function(d=null){const e=a.getCurrentURI(),f=[];a.notfound=!0,new BeforeMiddleware(a.BeforeRouteMiddleware,a.BeforeRouteMiddlewareFunc),a.routes.forEach(function(b){b.paramsEnabled?(f.push(b.route),a.handle(f)):b.route===e&&c(b)}),a.notfound?b.apply(null,[]):a.routeCall.apply(null,a.params),null==d?null!=a.AfterRouteCallback&&a.AfterRouteCallback.apply(null,[]):(a.AfterRouteCallback=d,a.AfterRouteCallback.apply(null,[]))},window.addEventListener("hashchange",function(){a.run()})};const RouterRequest=function(){this;let a="/"+location.hash;this.getURI=function(){return"#/"===location.hash.substr(0,2)&&(a=location.hash.substr(1)),a},this.setURI=function(a){location.hash=a}},BeforeMiddleware=function(a,b){this;switch(this.route=a,this.callback=b,this.URI=new RouterRequest().getURI(),this.route.substr(0,2)){case"#/":this.route=this.route.substr(1);break;case"/#":this.route=this.route.substr(2);}null!=this.callback&&("*"===this.route?this.callback.apply(null,[]):this.route===this.URI&&this.callback.apply(null,[]))},handlingParams=function(a){const b=this,c=router.getCurrentURI().split("/"),d=a.split("/"),e=[];this.pushParam=function(a){""!==a&&e.push(a)};for(let e=0;e<d.length;e++)":"===d[e].substr(0,1)&&(b.pushParam(c[e]),d[e]=c[e]);return{params:e,RouteArray:d.join("")}},Exception=function(a){throw new TypeError(a)};
